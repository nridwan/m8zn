---
import type { GetStaticPathsOptions } from "astro";
import BaseLayout from "src/layouts/BaseLayout.astro";
import { getCollection } from "astro:content";
import dayjs from "dayjs";
import type { BlogContent } from "src/types/blog";
import PaginationButton from "src/components/PaginationButton.svelte";
import BlogListCard from "src/components/BlogListCard.svelte";

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
  const posts: BlogContent[] = await getCollection("blog");
  const allTags = posts.flatMap((post) => {
    return post.data.tags || [];
  });

  console.log(allTags);

  return allTags.flatMap((tag) => {
    const filteredPosts = posts.filter((post) => {
      return post.data.tags?.includes(tag);
    });
    filteredPosts.sort(
      (a, b) => dayjs(b.data.pubDate).unix() - dayjs(a.data.pubDate).unix()
    );
    return paginate(filteredPosts, {
      params: { tag },
      pageSize: 10,
    });
  });
}

const { page } = Astro.props;
const data = page.data as BlogContent[];
let title = "Blog";
if (page.lastPage > 1) {
  title += " - Page " + page.currentPage;
}
---

<BaseLayout title={title}>
  <div class="envelope-background">
    {
      data.map((post) => {
        //@ts-ignore
        return <BlogListCard {post} />;
      })
    }
  </div>
  <br />
  {/* @ts-ignore */}
  <PaginationButton prev={page.url.prev} next={page.url.next} />
</BaseLayout>
